import{a as g,t as G,b as x}from"../chunks/disclose-version.CUJr2fC1.js";import{p as Re,t as Ge,a as Ne,c as q,s as u,n as h,r as F,f as he}from"../chunks/runtime.KMv9Mpc9.js";import{T as E}from"../chunks/Title.Rt6Roc2-.js";import{s as Ee,b as je,a as ue,C as Le,T as m}from"../chunks/TwoColsContainer.DhZyNmFy.js";import{P as M}from"../chunks/Paragraph.CJbIHcfA.js";import{L as K}from"../chunks/LinksList.Bw3jPvWm.js";import{C as j}from"../chunks/CodeBlock.oBdKtSal.js";import{l as _e,p as D}from"../chunks/props.DpqqZa3c.js";import{i as Be}from"../chunks/lifecycle.uhu3C_P9.js";import{C as fe}from"../chunks/CodeBlockInline.PsoZyWO0.js";const Oe=""+new URL("../assets/elixir-telegram-bot-facebook-share.DD1TQ0rP.jpg?h=630&w=1200",import.meta.url).href,Ve=()=>({image:Oe,description:"This is the first part of three in the series. There you will find creating foundation and answering to users.",title:"How to create Telegram bot with Elixir - Part 1"}),Ut=Object.freeze(Object.defineProperty({__proto__:null,load:Ve},Symbol.toStringTag,{value:"Module"})),$e="-",We=e=>{const r=Fe(e),{conflictingClassGroups:s,conflictingClassGroupModifiers:n}=e;return{getClassGroupId:d=>{const l=d.split($e);return l[0]===""&&l.length!==1&&l.shift(),Te(l,r)||qe(d)},getConflictingClassGroupIds:(d,l)=>{const $=s[d]||[];return l&&n[d]?[...$,...n[d]]:$}}},Te=(e,r)=>{var d;if(e.length===0)return r.classGroupId;const s=e[0],n=r.nextPart.get(s),i=n?Te(e.slice(1),n):void 0;if(i)return i;if(r.validators.length===0)return;const a=e.join($e);return(d=r.validators.find(({validator:l})=>l(a)))==null?void 0:d.classGroupId},ke=/^\[(.+)\]$/,qe=e=>{if(ke.test(e)){const r=ke.exec(e)[1],s=r==null?void 0:r.substring(0,r.indexOf(":"));if(s)return"arbitrary.."+s}},Fe=e=>{const{theme:r,prefix:s}=e,n={nextPart:new Map,validators:[]};return He(Object.entries(e.classGroups),s).forEach(([a,d])=>{ve(d,n,a,r)}),n},ve=(e,r,s,n)=>{e.forEach(i=>{if(typeof i=="string"){const a=i===""?r:Pe(r,i);a.classGroupId=s;return}if(typeof i=="function"){if(Ue(i)){ve(i(n),r,s,n);return}r.validators.push({validator:i,classGroupId:s});return}Object.entries(i).forEach(([a,d])=>{ve(d,Pe(r,a),s,n)})})},Pe=(e,r)=>{let s=e;return r.split($e).forEach(n=>{s.nextPart.has(n)||s.nextPart.set(n,{nextPart:new Map,validators:[]}),s=s.nextPart.get(n)}),s},Ue=e=>e.isThemeGetter,He=(e,r)=>r?e.map(([s,n])=>{const i=n.map(a=>typeof a=="string"?r+a:typeof a=="object"?Object.fromEntries(Object.entries(a).map(([d,l])=>[r+d,l])):a);return[s,i]}):e,Je=e=>{if(e<1)return{get:()=>{},set:()=>{}};let r=0,s=new Map,n=new Map;const i=(a,d)=>{s.set(a,d),r++,r>e&&(r=0,n=s,s=new Map)};return{get(a){let d=s.get(a);if(d!==void 0)return d;if((d=n.get(a))!==void 0)return i(a,d),d},set(a,d){s.has(a)?s.set(a,d):i(a,d)}}},ze="!",Ye=e=>{const{separator:r,experimentalParseClassName:s}=e,n=r.length===1,i=r[0],a=r.length,d=l=>{const $=[];let k=0,_=0,z;for(let w=0;w<l.length;w++){let C=l[w];if(k===0){if(C===i&&(n||l.slice(w,w+a)===r)){$.push(l.slice(_,w)),_=w+a;continue}if(C==="/"){z=w;continue}}C==="["?k++:C==="]"&&k--}const T=$.length===0?l:l.substring(_),A=T.startsWith(ze),S=A?T.substring(1):T,P=z&&z>_?z-_:void 0;return{modifiers:$,hasImportantModifier:A,baseClassName:S,maybePostfixModifierPosition:P}};return s?l=>s({className:l,parseClassName:d}):d},Qe=e=>{if(e.length<=1)return e;const r=[];let s=[];return e.forEach(n=>{n[0]==="["?(r.push(...s.sort(),n),s=[]):s.push(n)}),r.push(...s.sort()),r},Xe=e=>({cache:Je(e.cacheSize),parseClassName:Ye(e),...We(e)}),Ze=/\s+/,Ke=(e,r)=>{const{parseClassName:s,getClassGroupId:n,getConflictingClassGroupIds:i}=r,a=[],d=e.trim().split(Ze);let l="";for(let $=d.length-1;$>=0;$-=1){const k=d[$],{modifiers:_,hasImportantModifier:z,baseClassName:T,maybePostfixModifierPosition:A}=s(k);let S=!!A,P=n(S?T.substring(0,A):T);if(!P){if(!S){l=k+(l.length>0?" "+l:l);continue}if(P=n(T),!P){l=k+(l.length>0?" "+l:l);continue}S=!1}const w=Qe(_).join(":"),C=z?w+ze:w,I=C+P;if(a.includes(I))continue;a.push(I);const B=i(P,S);for(let N=0;N<B.length;++N){const U=B[N];a.push(C+U)}l=k+(l.length>0?" "+l:l)}return l};function De(){let e=0,r,s,n="";for(;e<arguments.length;)(r=arguments[e++])&&(s=Se(r))&&(n&&(n+=" "),n+=s);return n}const Se=e=>{if(typeof e=="string")return e;let r,s="";for(let n=0;n<e.length;n++)e[n]&&(r=Se(e[n]))&&(s&&(s+=" "),s+=r);return s};function et(e,...r){let s,n,i,a=d;function d($){const k=r.reduce((_,z)=>z(_),e());return s=Xe(k),n=s.cache.get,i=s.cache.set,a=l,l($)}function l($){const k=n($);if(k)return k;const _=Ke($,s);return i($,_),_}return function(){return a(De.apply(null,arguments))}}const y=e=>{const r=s=>s[e]||[];return r.isThemeGetter=!0,r},Ae=/^\[(?:([a-z-]+):)?(.+)\]$/i,tt=/^\d+\/\d+$/,rt=new Set(["px","full","screen"]),ot=/^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,st=/\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,nt=/^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/,at=/^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/,lt=/^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/,L=e=>ee(e)||rt.has(e)||tt.test(e),V=e=>te(e,"length",ht),ee=e=>!!e&&!Number.isNaN(Number(e)),me=e=>te(e,"number",ee),ge=e=>!!e&&Number.isInteger(Number(e)),it=e=>e.endsWith("%")&&ee(e.slice(0,-1)),p=e=>Ae.test(e),W=e=>ot.test(e),dt=new Set(["length","size","percentage"]),ct=e=>te(e,dt,Ie),pt=e=>te(e,"position",Ie),ut=new Set(["image","url"]),gt=e=>te(e,ut,mt),bt=e=>te(e,"",ft),be=()=>!0,te=(e,r,s)=>{const n=Ae.exec(e);return n?n[1]?typeof r=="string"?n[1]===r:r.has(n[1]):s(n[2]):!1},ht=e=>st.test(e)&&!nt.test(e),Ie=()=>!1,ft=e=>at.test(e),mt=e=>lt.test(e),vt=()=>{const e=y("colors"),r=y("spacing"),s=y("blur"),n=y("brightness"),i=y("borderColor"),a=y("borderRadius"),d=y("borderSpacing"),l=y("borderWidth"),$=y("contrast"),k=y("grayscale"),_=y("hueRotate"),z=y("invert"),T=y("gap"),A=y("gradientColorStops"),S=y("gradientColorStopPositions"),P=y("inset"),w=y("margin"),C=y("opacity"),I=y("padding"),B=y("saturate"),N=y("scale"),U=y("sepia"),re=y("skew"),oe=y("space"),se=y("translate"),Y=()=>["auto","contain","none"],Q=()=>["auto","hidden","clip","visible","scroll"],X=()=>["auto",p,r],f=()=>[p,r],ne=()=>["",L,V],H=()=>["auto",ee,p],ae=()=>["bottom","center","left","left-bottom","left-top","right","right-bottom","right-top","top"],J=()=>["solid","dashed","dotted","double","none"],le=()=>["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"],Z=()=>["start","end","center","between","around","evenly","stretch"],O=()=>["","0",p],ie=()=>["auto","avoid","all","avoid-page","page","left","right","column"],R=()=>[ee,p];return{cacheSize:500,separator:":",theme:{colors:[be],spacing:[L,V],blur:["none","",W,p],brightness:R(),borderColor:[e],borderRadius:["none","","full",W,p],borderSpacing:f(),borderWidth:ne(),contrast:R(),grayscale:O(),hueRotate:R(),invert:O(),gap:f(),gradientColorStops:[e],gradientColorStopPositions:[it,V],inset:X(),margin:X(),opacity:R(),padding:f(),saturate:R(),scale:R(),sepia:O(),skew:R(),space:f(),translate:f()},classGroups:{aspect:[{aspect:["auto","square","video",p]}],container:["container"],columns:[{columns:[W]}],"break-after":[{"break-after":ie()}],"break-before":[{"break-before":ie()}],"break-inside":[{"break-inside":["auto","avoid","avoid-page","avoid-column"]}],"box-decoration":[{"box-decoration":["slice","clone"]}],box:[{box:["border","content"]}],display:["block","inline-block","inline","flex","inline-flex","table","inline-table","table-caption","table-cell","table-column","table-column-group","table-footer-group","table-header-group","table-row-group","table-row","flow-root","grid","inline-grid","contents","list-item","hidden"],float:[{float:["right","left","none","start","end"]}],clear:[{clear:["left","right","both","none","start","end"]}],isolation:["isolate","isolation-auto"],"object-fit":[{object:["contain","cover","fill","none","scale-down"]}],"object-position":[{object:[...ae(),p]}],overflow:[{overflow:Q()}],"overflow-x":[{"overflow-x":Q()}],"overflow-y":[{"overflow-y":Q()}],overscroll:[{overscroll:Y()}],"overscroll-x":[{"overscroll-x":Y()}],"overscroll-y":[{"overscroll-y":Y()}],position:["static","fixed","absolute","relative","sticky"],inset:[{inset:[P]}],"inset-x":[{"inset-x":[P]}],"inset-y":[{"inset-y":[P]}],start:[{start:[P]}],end:[{end:[P]}],top:[{top:[P]}],right:[{right:[P]}],bottom:[{bottom:[P]}],left:[{left:[P]}],visibility:["visible","invisible","collapse"],z:[{z:["auto",ge,p]}],basis:[{basis:X()}],"flex-direction":[{flex:["row","row-reverse","col","col-reverse"]}],"flex-wrap":[{flex:["wrap","wrap-reverse","nowrap"]}],flex:[{flex:["1","auto","initial","none",p]}],grow:[{grow:O()}],shrink:[{shrink:O()}],order:[{order:["first","last","none",ge,p]}],"grid-cols":[{"grid-cols":[be]}],"col-start-end":[{col:["auto",{span:["full",ge,p]},p]}],"col-start":[{"col-start":H()}],"col-end":[{"col-end":H()}],"grid-rows":[{"grid-rows":[be]}],"row-start-end":[{row:["auto",{span:[ge,p]},p]}],"row-start":[{"row-start":H()}],"row-end":[{"row-end":H()}],"grid-flow":[{"grid-flow":["row","col","dense","row-dense","col-dense"]}],"auto-cols":[{"auto-cols":["auto","min","max","fr",p]}],"auto-rows":[{"auto-rows":["auto","min","max","fr",p]}],gap:[{gap:[T]}],"gap-x":[{"gap-x":[T]}],"gap-y":[{"gap-y":[T]}],"justify-content":[{justify:["normal",...Z()]}],"justify-items":[{"justify-items":["start","end","center","stretch"]}],"justify-self":[{"justify-self":["auto","start","end","center","stretch"]}],"align-content":[{content:["normal",...Z(),"baseline"]}],"align-items":[{items:["start","end","center","baseline","stretch"]}],"align-self":[{self:["auto","start","end","center","stretch","baseline"]}],"place-content":[{"place-content":[...Z(),"baseline"]}],"place-items":[{"place-items":["start","end","center","baseline","stretch"]}],"place-self":[{"place-self":["auto","start","end","center","stretch"]}],p:[{p:[I]}],px:[{px:[I]}],py:[{py:[I]}],ps:[{ps:[I]}],pe:[{pe:[I]}],pt:[{pt:[I]}],pr:[{pr:[I]}],pb:[{pb:[I]}],pl:[{pl:[I]}],m:[{m:[w]}],mx:[{mx:[w]}],my:[{my:[w]}],ms:[{ms:[w]}],me:[{me:[w]}],mt:[{mt:[w]}],mr:[{mr:[w]}],mb:[{mb:[w]}],ml:[{ml:[w]}],"space-x":[{"space-x":[oe]}],"space-x-reverse":["space-x-reverse"],"space-y":[{"space-y":[oe]}],"space-y-reverse":["space-y-reverse"],w:[{w:["auto","min","max","fit","svw","lvw","dvw",p,r]}],"min-w":[{"min-w":[p,r,"min","max","fit"]}],"max-w":[{"max-w":[p,r,"none","full","min","max","fit","prose",{screen:[W]},W]}],h:[{h:[p,r,"auto","min","max","fit","svh","lvh","dvh"]}],"min-h":[{"min-h":[p,r,"min","max","fit","svh","lvh","dvh"]}],"max-h":[{"max-h":[p,r,"min","max","fit","svh","lvh","dvh"]}],size:[{size:[p,r,"auto","min","max","fit"]}],"font-size":[{text:["base",W,V]}],"font-smoothing":["antialiased","subpixel-antialiased"],"font-style":["italic","not-italic"],"font-weight":[{font:["thin","extralight","light","normal","medium","semibold","bold","extrabold","black",me]}],"font-family":[{font:[be]}],"fvn-normal":["normal-nums"],"fvn-ordinal":["ordinal"],"fvn-slashed-zero":["slashed-zero"],"fvn-figure":["lining-nums","oldstyle-nums"],"fvn-spacing":["proportional-nums","tabular-nums"],"fvn-fraction":["diagonal-fractions","stacked-fractons"],tracking:[{tracking:["tighter","tight","normal","wide","wider","widest",p]}],"line-clamp":[{"line-clamp":["none",ee,me]}],leading:[{leading:["none","tight","snug","normal","relaxed","loose",L,p]}],"list-image":[{"list-image":["none",p]}],"list-style-type":[{list:["none","disc","decimal",p]}],"list-style-position":[{list:["inside","outside"]}],"placeholder-color":[{placeholder:[e]}],"placeholder-opacity":[{"placeholder-opacity":[C]}],"text-alignment":[{text:["left","center","right","justify","start","end"]}],"text-color":[{text:[e]}],"text-opacity":[{"text-opacity":[C]}],"text-decoration":["underline","overline","line-through","no-underline"],"text-decoration-style":[{decoration:[...J(),"wavy"]}],"text-decoration-thickness":[{decoration:["auto","from-font",L,V]}],"underline-offset":[{"underline-offset":["auto",L,p]}],"text-decoration-color":[{decoration:[e]}],"text-transform":["uppercase","lowercase","capitalize","normal-case"],"text-overflow":["truncate","text-ellipsis","text-clip"],"text-wrap":[{text:["wrap","nowrap","balance","pretty"]}],indent:[{indent:f()}],"vertical-align":[{align:["baseline","top","middle","bottom","text-top","text-bottom","sub","super",p]}],whitespace:[{whitespace:["normal","nowrap","pre","pre-line","pre-wrap","break-spaces"]}],break:[{break:["normal","words","all","keep"]}],hyphens:[{hyphens:["none","manual","auto"]}],content:[{content:["none",p]}],"bg-attachment":[{bg:["fixed","local","scroll"]}],"bg-clip":[{"bg-clip":["border","padding","content","text"]}],"bg-opacity":[{"bg-opacity":[C]}],"bg-origin":[{"bg-origin":["border","padding","content"]}],"bg-position":[{bg:[...ae(),pt]}],"bg-repeat":[{bg:["no-repeat",{repeat:["","x","y","round","space"]}]}],"bg-size":[{bg:["auto","cover","contain",ct]}],"bg-image":[{bg:["none",{"gradient-to":["t","tr","r","br","b","bl","l","tl"]},gt]}],"bg-color":[{bg:[e]}],"gradient-from-pos":[{from:[S]}],"gradient-via-pos":[{via:[S]}],"gradient-to-pos":[{to:[S]}],"gradient-from":[{from:[A]}],"gradient-via":[{via:[A]}],"gradient-to":[{to:[A]}],rounded:[{rounded:[a]}],"rounded-s":[{"rounded-s":[a]}],"rounded-e":[{"rounded-e":[a]}],"rounded-t":[{"rounded-t":[a]}],"rounded-r":[{"rounded-r":[a]}],"rounded-b":[{"rounded-b":[a]}],"rounded-l":[{"rounded-l":[a]}],"rounded-ss":[{"rounded-ss":[a]}],"rounded-se":[{"rounded-se":[a]}],"rounded-ee":[{"rounded-ee":[a]}],"rounded-es":[{"rounded-es":[a]}],"rounded-tl":[{"rounded-tl":[a]}],"rounded-tr":[{"rounded-tr":[a]}],"rounded-br":[{"rounded-br":[a]}],"rounded-bl":[{"rounded-bl":[a]}],"border-w":[{border:[l]}],"border-w-x":[{"border-x":[l]}],"border-w-y":[{"border-y":[l]}],"border-w-s":[{"border-s":[l]}],"border-w-e":[{"border-e":[l]}],"border-w-t":[{"border-t":[l]}],"border-w-r":[{"border-r":[l]}],"border-w-b":[{"border-b":[l]}],"border-w-l":[{"border-l":[l]}],"border-opacity":[{"border-opacity":[C]}],"border-style":[{border:[...J(),"hidden"]}],"divide-x":[{"divide-x":[l]}],"divide-x-reverse":["divide-x-reverse"],"divide-y":[{"divide-y":[l]}],"divide-y-reverse":["divide-y-reverse"],"divide-opacity":[{"divide-opacity":[C]}],"divide-style":[{divide:J()}],"border-color":[{border:[i]}],"border-color-x":[{"border-x":[i]}],"border-color-y":[{"border-y":[i]}],"border-color-s":[{"border-s":[i]}],"border-color-e":[{"border-e":[i]}],"border-color-t":[{"border-t":[i]}],"border-color-r":[{"border-r":[i]}],"border-color-b":[{"border-b":[i]}],"border-color-l":[{"border-l":[i]}],"divide-color":[{divide:[i]}],"outline-style":[{outline:["",...J()]}],"outline-offset":[{"outline-offset":[L,p]}],"outline-w":[{outline:[L,V]}],"outline-color":[{outline:[e]}],"ring-w":[{ring:ne()}],"ring-w-inset":["ring-inset"],"ring-color":[{ring:[e]}],"ring-opacity":[{"ring-opacity":[C]}],"ring-offset-w":[{"ring-offset":[L,V]}],"ring-offset-color":[{"ring-offset":[e]}],shadow:[{shadow:["","inner","none",W,bt]}],"shadow-color":[{shadow:[be]}],opacity:[{opacity:[C]}],"mix-blend":[{"mix-blend":[...le(),"plus-lighter","plus-darker"]}],"bg-blend":[{"bg-blend":le()}],filter:[{filter:["","none"]}],blur:[{blur:[s]}],brightness:[{brightness:[n]}],contrast:[{contrast:[$]}],"drop-shadow":[{"drop-shadow":["","none",W,p]}],grayscale:[{grayscale:[k]}],"hue-rotate":[{"hue-rotate":[_]}],invert:[{invert:[z]}],saturate:[{saturate:[B]}],sepia:[{sepia:[U]}],"backdrop-filter":[{"backdrop-filter":["","none"]}],"backdrop-blur":[{"backdrop-blur":[s]}],"backdrop-brightness":[{"backdrop-brightness":[n]}],"backdrop-contrast":[{"backdrop-contrast":[$]}],"backdrop-grayscale":[{"backdrop-grayscale":[k]}],"backdrop-hue-rotate":[{"backdrop-hue-rotate":[_]}],"backdrop-invert":[{"backdrop-invert":[z]}],"backdrop-opacity":[{"backdrop-opacity":[C]}],"backdrop-saturate":[{"backdrop-saturate":[B]}],"backdrop-sepia":[{"backdrop-sepia":[U]}],"border-collapse":[{border:["collapse","separate"]}],"border-spacing":[{"border-spacing":[d]}],"border-spacing-x":[{"border-spacing-x":[d]}],"border-spacing-y":[{"border-spacing-y":[d]}],"table-layout":[{table:["auto","fixed"]}],caption:[{caption:["top","bottom"]}],transition:[{transition:["none","all","","colors","opacity","shadow","transform",p]}],duration:[{duration:R()}],ease:[{ease:["linear","in","out","in-out",p]}],delay:[{delay:R()}],animate:[{animate:["none","spin","ping","pulse","bounce",p]}],transform:[{transform:["","gpu","none"]}],scale:[{scale:[N]}],"scale-x":[{"scale-x":[N]}],"scale-y":[{"scale-y":[N]}],rotate:[{rotate:[ge,p]}],"translate-x":[{"translate-x":[se]}],"translate-y":[{"translate-y":[se]}],"skew-x":[{"skew-x":[re]}],"skew-y":[{"skew-y":[re]}],"transform-origin":[{origin:["center","top","top-right","right","bottom-right","bottom","bottom-left","left","top-left",p]}],accent:[{accent:["auto",e]}],appearance:[{appearance:["none","auto"]}],cursor:[{cursor:["auto","default","pointer","wait","text","move","help","not-allowed","none","context-menu","progress","cell","crosshair","vertical-text","alias","copy","no-drop","grab","grabbing","all-scroll","col-resize","row-resize","n-resize","e-resize","s-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out",p]}],"caret-color":[{caret:[e]}],"pointer-events":[{"pointer-events":["none","auto"]}],resize:[{resize:["none","y","x",""]}],"scroll-behavior":[{scroll:["auto","smooth"]}],"scroll-m":[{"scroll-m":f()}],"scroll-mx":[{"scroll-mx":f()}],"scroll-my":[{"scroll-my":f()}],"scroll-ms":[{"scroll-ms":f()}],"scroll-me":[{"scroll-me":f()}],"scroll-mt":[{"scroll-mt":f()}],"scroll-mr":[{"scroll-mr":f()}],"scroll-mb":[{"scroll-mb":f()}],"scroll-ml":[{"scroll-ml":f()}],"scroll-p":[{"scroll-p":f()}],"scroll-px":[{"scroll-px":f()}],"scroll-py":[{"scroll-py":f()}],"scroll-ps":[{"scroll-ps":f()}],"scroll-pe":[{"scroll-pe":f()}],"scroll-pt":[{"scroll-pt":f()}],"scroll-pr":[{"scroll-pr":f()}],"scroll-pb":[{"scroll-pb":f()}],"scroll-pl":[{"scroll-pl":f()}],"snap-align":[{snap:["start","end","center","align-none"]}],"snap-stop":[{snap:["normal","always"]}],"snap-type":[{snap:["none","x","y","both"]}],"snap-strictness":[{snap:["mandatory","proximity"]}],touch:[{touch:["auto","none","manipulation"]}],"touch-x":[{"touch-pan":["x","left","right"]}],"touch-y":[{"touch-pan":["y","up","down"]}],"touch-pz":["touch-pinch-zoom"],select:[{select:["none","text","all","auto"]}],"will-change":[{"will-change":["auto","scroll","contents","transform",p]}],fill:[{fill:[e,"none"]}],"stroke-w":[{stroke:[L,V,me]}],stroke:[{stroke:[e,"none"]}],sr:["sr-only","not-sr-only"],"forced-color-adjust":[{"forced-color-adjust":["auto","none"]}]},conflictingClassGroups:{overflow:["overflow-x","overflow-y"],overscroll:["overscroll-x","overscroll-y"],inset:["inset-x","inset-y","start","end","top","right","bottom","left"],"inset-x":["right","left"],"inset-y":["top","bottom"],flex:["basis","grow","shrink"],gap:["gap-x","gap-y"],p:["px","py","ps","pe","pt","pr","pb","pl"],px:["pr","pl"],py:["pt","pb"],m:["mx","my","ms","me","mt","mr","mb","ml"],mx:["mr","ml"],my:["mt","mb"],size:["w","h"],"font-size":["leading"],"fvn-normal":["fvn-ordinal","fvn-slashed-zero","fvn-figure","fvn-spacing","fvn-fraction"],"fvn-ordinal":["fvn-normal"],"fvn-slashed-zero":["fvn-normal"],"fvn-figure":["fvn-normal"],"fvn-spacing":["fvn-normal"],"fvn-fraction":["fvn-normal"],"line-clamp":["display","overflow"],rounded:["rounded-s","rounded-e","rounded-t","rounded-r","rounded-b","rounded-l","rounded-ss","rounded-se","rounded-ee","rounded-es","rounded-tl","rounded-tr","rounded-br","rounded-bl"],"rounded-s":["rounded-ss","rounded-es"],"rounded-e":["rounded-se","rounded-ee"],"rounded-t":["rounded-tl","rounded-tr"],"rounded-r":["rounded-tr","rounded-br"],"rounded-b":["rounded-br","rounded-bl"],"rounded-l":["rounded-tl","rounded-bl"],"border-spacing":["border-spacing-x","border-spacing-y"],"border-w":["border-w-s","border-w-e","border-w-t","border-w-r","border-w-b","border-w-l"],"border-w-x":["border-w-r","border-w-l"],"border-w-y":["border-w-t","border-w-b"],"border-color":["border-color-s","border-color-e","border-color-t","border-color-r","border-color-b","border-color-l"],"border-color-x":["border-color-r","border-color-l"],"border-color-y":["border-color-t","border-color-b"],"scroll-m":["scroll-mx","scroll-my","scroll-ms","scroll-me","scroll-mt","scroll-mr","scroll-mb","scroll-ml"],"scroll-mx":["scroll-mr","scroll-ml"],"scroll-my":["scroll-mt","scroll-mb"],"scroll-p":["scroll-px","scroll-py","scroll-ps","scroll-pe","scroll-pt","scroll-pr","scroll-pb","scroll-pl"],"scroll-px":["scroll-pr","scroll-pl"],"scroll-py":["scroll-pt","scroll-pb"],touch:["touch-x","touch-y","touch-pz"],"touch-x":["touch"],"touch-y":["touch"],"touch-pz":["touch"]},conflictingClassGroupModifiers:{"font-size":["leading"]}}},$t=et(vt);var xt=G('<video><source> <!> <track kind="captions"> Your browser does not support the video tag.</video>');function yt(e,r){const s=_e(r,["children","$$slots","$$events","$$legacy"]),n=_e(s,["src","type","trackSrc","srclang","label"]);Re(r,!1);let i=D(r,"src",8),a=D(r,"type",8,"video/mp4"),d=D(r,"trackSrc",8,""),l=D(r,"srclang",8,"en"),$=D(r,"label",8,"english_captions"),k=$t(s.class);Be();var _=xt();let z;var T=q(_),A=u(T,2);Ee(A,r,"default",{});var S=u(A,2);h(),F(_),Ge(()=>{z=je(_,z,{...n,class:k}),ue(T,"src",i()),ue(T,"type",a()),ue(S,"src",d()),ue(S,"srclang",l()),ue(S,"label",$())}),g(e,_),Ne()}var wt=G('<div class="video svelte-1lat3fd"><!></div>');function Ce(e,r){let s=D(r,"src",8);var n=wt(),i=q(n);yt(i,{get src(){return s()},controls:!0}),F(n),g(e,n)}const _t=""+new URL("../assets/api_token.CqwNeRxB.mp4",import.meta.url).href,kt=""+new URL("../assets/demo_of_bot.Bnn26c6O.mp4",import.meta.url).href;var Pt=G('<div slot="aside"><!></div>'),Ct=G('<div slot="aside"><!></div>'),Tt=G('<div slot="aside"><!></div>'),zt=G(`First you need to create a new application. The <!> option
      adds a supervisor to the application and starts it at startup. After creation, the structure of
      the application should look like this:`,1),St=G('<div slot="aside"><!></div>'),At=G(`If you try to receive messages again, the answer will be the same. This happens because it is
      necessary to indicate to the telegram which messages have already been received. To do this,
      take the <!> of the last message, increase it to one and
      use it as a get parameter to receive new messages.`,1),It=G(`The <!> function uses pattern matching to pick
      up the sender's name and the text of the incoming message to send it back to the user as a post-request.`,1),Mt=G('<div slot="aside"><!></div>'),Rt=G('<div slot="aside"><!></div>'),Gt=G("<!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!> <!>",1);function Ht(e){Le(e,{children:(r,s)=>{var n=Gt(),i=he(n);E(i,{level:"1",children:(t,c)=>{h();var o=x("Introduction to Telegram Bots API");g(t,o)},$$slots:{default:!0}});var a=u(i,2);E(a,{level:"2",children:(t,c)=>{h();var o=x("Exchanging messages with Telegram");g(t,o)},$$slots:{default:!0}});var d=u(a,2);m(d,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=x(`Telegram supports two types of integration: webhooks and polling. Webhooks it's a type when
      Telegram sends request to your server whenever bot recevied a message from the user. There
      pros and cons of that type of integration. Webhooks are more sustainable in general. For
      webhooks it's necessary to have web-server with external IP adress. This server will receive
      new messages through get requests from Telegram. During development you can use ngrock.`);g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var l=u(d,2);m(l,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=x(`Polling is a constant polling of the Telegram server for new messages. For polling, you do not
      need a server and an external address. Simple application that sends requests to the Telegram
      server without stopping is enough.`);g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0,aside:(t,c)=>{var o=Pt(),v=q(o);K(v,{links:[["Documentation about Telegram bots","https://core.telegram.org/bots/api#getting-updates"]]}),F(o),g(t,o)}}});var $=u(l,2);E($,{level:"2",children:(t,c)=>{h();var o=x("Obtaining a token from Telegram");g(t,o)},$$slots:{default:!0}});var k=u($,2);m(k,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=x("The token for Telegram requests must be obtained from the BotFather bot.");g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var _=u(k,2);m(_,{children:(t,c)=>{Ce(t,{src:_t})},$$slots:{default:!0,aside:(t,c)=>{var o=Ct(),v=q(o);K(v,{links:[["BotFather","https://t.me/botfather"]]}),F(o),g(t,o)}}});var z=u(_,2);E(z,{level:"2",children:(t,c)=>{h();var o=x("Elixir");g(t,o)},$$slots:{default:!0}});var T=u(z,2);m(T,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=x(`Elixir is a functional programming language. Based on the another programming language Erlang.
      The main advantage of Elixir is the ability to manage a huge number of processes. These
      processes are also made in a special way, so they take up significantly less memory and
      processor time than normal computer processes.`);g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0,aside:(t,c)=>{var o=Tt(),v=q(o);K(v,{links:[["How to install Elixir one elixir-lang.org","https://elixir-lang.org/install.html"],["Installing with asdf package manager","https://gist.github.com/mikoscz/4d2a0052d4cdaaa027bc8a8d6af1e817"]]}),F(o),g(t,o)}}});var A=u(T,2);E(A,{level:"2",children:(t,c)=>{h();var o=x("The application");g(t,o)},$$slots:{default:!0}});var S=u(A,2);m(S,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=x(`I will gradually complicate the application. I'll start with a echo bot that sends a message
      back in response to a message. Next, I will add saving users to the database. And in the end,
      I'll try to make it a little useful - upon request from the user, the bot will send summary
      information about the stock market.`);g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var P=u(S,2);E(P,{level:"3",children:(t,c)=>{h();var o=x("Creation of the skeleton of the application and installation of the necessary tools");g(t,o)},$$slots:{default:!0}});var w=u(P,2);m(w,{children:(t,c)=>{j(t,{snippet:"posts/elixir-telegran-bot/new_elixir_app.sh"})},$$slots:{default:!0}});var C=u(w,2);m(C,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=zt(),de=u(he(b));fe(de,{children:(ce,we)=>{h();var pe=x("--sup");g(ce,pe)},$$slots:{default:!0}}),h(),g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var I=u(C,2);m(I,{children:(t,c)=>{j(t,{snippet:"posts/elixir-telegran-bot/structure.sh"})},$$slots:{default:!0}});var B=u(I,2);m(B,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=x(`Additionally, you need to install HTTPoison to send requests and Jason to work with JSON in
      responses from the Telegram server.`);g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var N=u(B,2);m(N,{children:(t,c)=>{j(t,{snippet:"posts/elixir-telegran-bot/deps.elixir",fileName:"stocks_bot/mix.exs"})},$$slots:{default:!0}});var U=u(N,2);E(U,{level:"2",children:(t,c)=>{h();var o=x("Receiving user message");g(t,o)},$$slots:{default:!0}});var re=u(U,2);m(re,{children:(t,c)=>{j(t,{snippet:"posts/elixir-telegran-bot/stocks_bot_initial.elixir",fileName:"stocks_bot/lib/stocks_bot.ex"})},$$slots:{default:!0,aside:(t,c)=>{var o=St(),v=q(o);K(v,{links:[["Documentation about Telegram bots","https://core.telegram.org/bots/api#getting-updates"]]}),F(o),g(t,o)}}});var oe=u(re,2);m(oe,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=x(`Now you can try how it works. Send your bot a message. Then open your terminal and enter these
      commands.`);g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var se=u(oe,2);m(se,{children:(t,c)=>{j(t,{snippet:"posts/elixir-telegran-bot/test_bot.sh"})},$$slots:{default:!0}});var Y=u(se,2);m(Y,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=x("In the terminal you will see incoming message:");g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var Q=u(Y,2);m(Q,{children:(t,c)=>{j(t,{snippet:"posts/elixir-telegran-bot/messages_log.elixir"})},$$slots:{default:!0}});var X=u(Q,2);m(X,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=At(),de=u(he(b));fe(de,{children:(ce,we)=>{h();var pe=x("update_id");g(ce,pe)},$$slots:{default:!0}}),h(),g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var f=u(X,2);m(f,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=x(`So far, the script receives one message and stops working, but it needs to continue listening
      to new messages. I'll fix it now.`);g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var ne=u(f,2);m(ne,{children:(t,c)=>{j(t,{snippet:"posts/elixir-telegran-bot/stocks_bot_3.elixir",fileName:"stocks_bot/lib/stocks_bot.ex"})},$$slots:{default:!0}});var H=u(ne,2);E(H,{level:"3",children:(t,c)=>{h();var o=x("Polite answer");g(t,o)},$$slots:{default:!0}});var ae=u(H,2);m(ae,{children:(t,c)=>{j(t,{snippet:"posts/elixir-telegran-bot/stocks_bot_2.elixir",fileName:"stocks_bot/lib/stocks_bot.ex"})},$$slots:{default:!0}});var J=u(ae,2);m(J,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=It(),de=u(he(b));fe(de,{children:(ce,we)=>{h();var pe=x("answer_to_message");g(ce,pe)},$$slots:{default:!0}}),h(),g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var le=u(J,2);E(le,{level:"3",children:(t,c)=>{h();var o=x("Using supervisor for the application");g(t,o)},$$slots:{default:!0}});var Z=u(le,2);m(Z,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=x("First step is converting app to a Genserver.");g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var O=u(Z,2);m(O,{children:(t,c)=>{j(t,{snippet:"posts/elixir-telegran-bot/stocks_bot.elixir",fileName:"stocks_bot/lib/stocks_bot.ex"})},$$slots:{default:!0}});var ie=u(O,2);m(ie,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=x("Then this Genserver need to be added to Supervisor Tree.");g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}});var R=u(ie,2);m(R,{children:(t,c)=>{j(t,{snippet:"posts/elixir-telegran-bot/application.elixir",fileName:"stocks_bot/lib/stocks_bot/application.ex"})},$$slots:{default:!0,aside:(t,c)=>{var o=Mt(),v=q(o);K(v,{links:[["Article from AppSignal with good examples","https://blog.appsignal.com/2021/08/23/using-supervisors-to-organize-your-elixir-application.html"]]}),F(o),g(t,o)}}});var xe=u(R,2);E(xe,{level:"2",children:(t,c)=>{h();var o=x("Demo time");g(t,o)},$$slots:{default:!0}});var ye=u(xe,2);m(ye,{children:(t,c)=>{Ce(t,{src:kt})},$$slots:{default:!0,aside:(t,c)=>{var o=Rt(),v=q(o);K(v,{links:[["Github repository with bot source code","https://github.com/Rukomoynikov/telegram-bot-article"]]}),F(o),g(t,o)}}});var Me=u(ye,2);m(Me,{children:(t,c)=>{M(t,{children:(o,v)=>{h();var b=x(`Yes, the bot does not yet have superintelligence. In the next part, I will add user storage in
      the database and teach the bot to send stock price information.`);g(o,b)},$$slots:{default:!0}})},$$slots:{default:!0}}),g(r,n)},$$slots:{default:!0}})}export{Ht as component,Ut as universal};
