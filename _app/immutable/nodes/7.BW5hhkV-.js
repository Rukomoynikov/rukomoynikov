import{b as l,a as r,t as v}from"../chunks/disclose-version.CUJr2fC1.js";import{f as c,n as i,s,c as S,r as F}from"../chunks/runtime.KMv9Mpc9.js";import{C as B,T as n,a as D}from"../chunks/TwoColsContainer.DhZyNmFy.js";import{C as m}from"../chunks/CodeBlock.Dv3hnaFi.js";import{T as d}from"../chunks/Title.Rt6Roc2-.js";import{P as C}from"../chunks/Paragraph.CJbIHcfA.js";import{L as I}from"../chunks/LinksList.Bw3jPvWm.js";const R=""+new URL("../assets/tree.DtdLHkRP.svg",import.meta.url).href;var q=v('<!> <img width="100%" alt="Tree graph">',1),G=v('<div slot="aside"><!></div>'),H=v("<!> <!>",1),U=v("<!> <!> <!> <!> <!> <!> <!> <!>",1);function O(L){B(L,{children:(k,j)=>{var h=U(),u=c(h);d(u,{level:"1",children:(e,o)=>{i();var t=l('Three versions of Leetcode "Same tree"');r(e,t)},$$slots:{default:!0}});var _=s(u,2);n(_,{children:(e,o)=>{var t=q(),a=c(t);C(a,{children:(p,y)=>{i();var f=l(`Given the roots of two binary trees p and q, write a function to check if they are the same
			or not. Two binary trees are considered the same if they are structurally identical, and the
			nodes have the same value.`);r(p,f)},$$slots:{default:!0}});var $=s(a,2);D($,"src",R),r(e,t)},$$slots:{default:!0,aside:(e,o)=>{var t=G(),a=S(t);I(a,{links:[["LeetCode","https://leetcode.com/problems/same-tree/"]]}),F(t),r(e,t)}}});var P=s(_,2);d(P,{level:"2",children:(e,o)=>{i();var t=l("BFS");r(e,t)},$$slots:{default:!0}});var g=s(P,2);n(g,{children:(e,o)=>{var t=H(),a=c(t);m(a,{snippet:"posts/three-versions-of-leetcode-same-tree/bfs.ts"});var $=s(a,2);C($,{children:(p,y)=>{i();var f=l("BFS aka Breadth First Search or traversing trees level by level. It");r(p,f)},$$slots:{default:!0}}),r(e,t)},$$slots:{default:!0}});var x=s(g,2);d(x,{level:"2",children:(e,o)=>{i();var t=l("DFS Iterative");r(e,t)},$$slots:{default:!0}});var b=s(x,2);n(b,{children:(e,o)=>{m(e,{snippet:"posts/three-versions-of-leetcode-same-tree/dfs_iterative.ts"})},$$slots:{default:!0}});var T=s(b,2);d(T,{level:"2",children:(e,o)=>{i();var t=l("DFS Recursive");r(e,t)},$$slots:{default:!0}});var w=s(T,2);n(w,{children:(e,o)=>{m(e,{snippet:"posts/three-versions-of-leetcode-same-tree/dfs_recursive.ts"})},$$slots:{default:!0}}),r(k,h)},$$slots:{default:!0}})}export{O as component};
