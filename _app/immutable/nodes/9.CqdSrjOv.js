import{t as i,a as o,b as h}from"../chunks/legacy.kROiCmhR.js";import{f as k,n as l,s as a,c as w,r as y}from"../chunks/utils.CrDVYUnt.js";import{T as c}from"../chunks/Title.BHUhat24.js";import{C as O,T as d}from"../chunks/TwoColsContainer.zeqId5Fh.js";import{P as p}from"../chunks/Paragraph.CYSbAqwQ.js";import{L as T}from"../chunks/LinksList.Cw5MOKHz.js";import{C}from"../chunks/CodeBlock.8S86QLwV.js";const S=()=>({description:"Today I learned how to run integration tests on Phoenix controllers",title:"Test Phoenix controllers"}),Q=Object.freeze(Object.defineProperty({__proto__:null,load:S},Symbol.toStringTag,{value:"Module"}));var q=h("<!> <!>",1),B=h('<div slot="aside"><!></div>'),E=h('<div slot="aside"><!></div>'),J=h("<!> <!> <!> <!> <!> <!> <!> <!>",1);function R(I){O(I,{children:(j,z)=>{var m=J(),f=k(m);c(f,{level:"1",children:(e,r)=>{l();var t=i("Trigger Phoenix controllers from mix tasks");o(e,t)},$$slots:{default:!0}});var v=a(f,2);d(v,{children:(e,r)=>{var t=q(),s=k(t);p(s,{children:($,M)=>{l();var u=i(`On of my projects needs to receive files from outside, like for example being uploaded from
			Github CI and I'd like to simulate this behaviour on my local machine. So, I needed a mix task
			which I will trigger and it would upload a file to the application.`);o($,u)},$$slots:{default:!0}});var n=a(s,2);p(n,{children:($,M)=>{l();var u=i(`Easiest way would be to start the application in one terminal tab and trigger this mix task in
			another.But Phoenix has all needed to make these both tasks simultanesly. In other words mix
			tasks can start up your application and shut it down when it's finished.`);o($,u)},$$slots:{default:!0}}),o(e,t)},$$slots:{default:!0,aside:(e,r)=>{var t=B(),s=w(t);T(s,{links:[["CodeMetrics - home for your development metrics","https://codemetrics.dev"]]}),y(t),o(e,t)}}});var _=a(v,2);c(_,{level:"2",children:(e,r)=>{l();var t=i("Application part");o(e,t)},$$slots:{default:!0}});var x=a(_,2);d(x,{children:(e,r)=>{C(e,{snippet:"today-i-learned/how_to_test_phoenix_controllers/simple_action.elixir"})},$$slots:{default:!0}});var b=a(x,2);d(b,{children:(e,r)=>{p(e,{children:(t,s)=>{l();var n=i(`Just for the sake of explanation I will keep it simple. Just a controller action that accepts
			get request with one query parameter.`);o(t,n)},$$slots:{default:!0}})},$$slots:{default:!0}});var P=a(b,2);c(P,{level:"2",children:(e,r)=>{l();var t=i("Mix task");o(e,t)},$$slots:{default:!0}});var g=a(P,2);d(g,{children:(e,r)=>{C(e,{snippet:"today-i-learned/how_to_test_phoenix_controllers/mix_task.elixir"})},$$slots:{default:!0}});var L=a(g,2);d(L,{children:(e,r)=>{p(e,{children:(t,s)=>{l();var n=i(`The mix task itself is relatively simple as well. I just check if TCP server is running. If
			not it starts the application. Main part is taken from the Phoenix github repo.`);o(t,n)},$$slots:{default:!0}})},$$slots:{default:!0,aside:(e,r)=>{var t=E(),s=w(t);T(s,{links:[["Elixir github repo","https://github.com/phoenixframework/phoenix/blob/3b64d58322ab2cb4bdaf6cb9662b84170b9bafeb/lib/mix/tasks/phx.server.ex#L31"]]}),y(t),o(e,t)}}}),o(j,m)},$$slots:{default:!0}})}export{R as component,Q as universal};
