(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{1263:function(module,exports,__webpack_require__){var content=__webpack_require__(1302);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[module.i,content,""]]),content.locals&&(module.exports=content.locals);(0,__webpack_require__(112).default)("58ea2e06",content,!0,{sourceMap:!1})},1301:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(1263)},1302:function(module,exports,__webpack_require__){var ___CSS_LOADER_EXPORT___=__webpack_require__(111)((function(i){return i[1]}));___CSS_LOADER_EXPORT___.push([module.i,".article-layout{display:flex}@media only screen and (max-width:595px){.article-layout{flex-direction:column}}.article-layout__text{display:flex;margin-right:42px}.article-layout__quotes{display:flex;font-size:15px}",""]),___CSS_LOADER_EXPORT___.locals={},module.exports=___CSS_LOADER_EXPORT___},1370:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var vue=__webpack_require__(18),vue_default=__webpack_require__.n(vue),HeroTitleSmall=__webpack_require__(1073),CodeSinppet=__webpack_require__(1075),links_list=__webpack_require__(1070),Title=__webpack_require__(1069),Paragraph=__webpack_require__(1071),Container=__webpack_require__(1067),Spacing=__webpack_require__(1072),WithImage=__webpack_require__(1076),docker_compose=__webpack_require__(1277),dockerfile=__webpack_require__(1278),posts_rails_on_dockervue_type_script_lang_ts_=vue_default.a.extend({components:{HeroTitleSmall:HeroTitleSmall.default,CodeSinppet:CodeSinppet.default,LinksList:links_list.default,Title:Title.default,Paragraph:Paragraph.default,Container:Container.default,Spacing:Spacing.default,CSDockerCompose:docker_compose.a,CSDockerfile:dockerfile.a,WithImage:WithImage.default}}),componentNormalizer=(__webpack_require__(1301),__webpack_require__(110)),component=Object(componentNormalizer.a)(posts_rails_on_dockervue_type_script_lang_ts_,(function(){var _vm=this,_h=_vm.$createElement,_c=_vm._self._c||_h;return _c("div",[_c("SocialHead",{attrs:{title:"How to generate Rails app and run it without installing ruby locally",description:"Docker image for generation rails application or play with ruby",image:__webpack_require__(1138)}}),_vm._v(" "),_c("HeroTitleSmall",{attrs:{tags:["Ruby","Docker"],title:"How to generate Rails app and run it without installing ruby locally",subtitle:"In internet plenty of articles about Dockerizing existing application. But, what if you don't have installed ruby locally and need to generate new app."}}),_vm._v(" "),_c("Container",{attrs:{type:"common"}},[_c("Title",{attrs:{level:2}},[_vm._v("\n      Why Docker?\n    ")]),_vm._v(" "),_c("section",[_c("Container",{attrs:{type:"content"}},[_c("Paragraph",[_vm._v("\n          It has always been easier to supply the necessary tools locally. If you need to have multiple versions, then rvm or nvm solve the problem. Then came Docker. Until this year, I had successfully managed to avoid it. On projects where the guys worked with Docker, I instead installed everything locally. But, I thought that enough fighting and it's time to try to live with the idea of \"docker for everything\". It's simply time to admit either i work using Docker or i don't work at all.\n        ")])],1)],1),_vm._v(" "),_c("Spacing",{attrs:{type:"vertical-section_sub"}}),_vm._v(" "),_c("Title",{attrs:{level:2}},[_vm._v("\n      Generating Ruby on Rails application\n    ")]),_vm._v(" "),_c("section",[_c("Container",{attrs:{type:"content"}},[_c("Paragraph",[_vm._v("\n          Well I don't have ruby installed locally. And I need to generate a new Rails application or experiment in IRB.\n        ")]),_vm._v(" "),_c("Paragraph",[_vm._v("\n          The first thing I did was look at the official Rails image. It turned out to be deprecated, and the authors suggested Ruby as a replacement. Using Ruby image, I was unable to generate a Rails application, so I made my own Docker image.\n        ")]),_vm._v(" "),_c("CodeSinppet",[_c("CSDockerfile")],1),_vm._v(" "),_c("LinksList",{attrs:{links:[["hub.docker.com/repository/docker/rukomoynikov/rails","https://hub.docker.com/repository/docker/rukomoynikov/rails/general"]]}})],1)],1),_vm._v(" "),_c("Spacing",{attrs:{type:"vertical-section_sub"}}),_vm._v(" "),_c("section",[_c("Container",{attrs:{type:"content"}},[_c("Title",{attrs:{level:3}},[_vm._v("\n          Using the image\n        ")]),_vm._v(" "),_c("Paragraph",[_vm._v("\n          The following command will generate a new Rails application in the current folder and install required gems in the gems folder. As you know, a container cannot change its content after it has been built. Therefore, all application files and gems will be stored on the host machine.\n        ")]),_vm._v(" "),_c("CodeSinppet",[_vm._v("docker run --rm -v /$(pwd):/app rukomoynikov/rails rails new .")]),_vm._v(" "),_c("Paragraph",[_vm._v("\n          Launching the application is not much more difficult. But, in a simple form, it will only work if you use the sqlite database.\n        ")]),_vm._v(" "),_c("CodeSinppet",[_vm._v("docker run --rm -it -p 3000:3000 -v /$(pwd):/app rukomoynikov/rails rails s -b 0.0.0.0")]),_vm._v(" "),_c("Paragraph",[_vm._v("\n          Running IRB. Or you can enter console and run ruby files from local machine.\n        ")]),_vm._v(" "),_c("CodeSinppet",[_vm._v("docker run --rm -it -p 3000:3000 -v /$(pwd):/app rukomoynikov/rails bash")]),_vm._v(" "),_c("WithImage",{attrs:{image:"posts/rails-on-docker/rails-basic-app/rails-basic-app"}},[_vm._v("\n          Ruby on Rails default page\n        ")])],1)],1),_vm._v(" "),_c("Spacing",{attrs:{type:"vertical-section_sub"}}),_vm._v(" "),_c("Title",{attrs:{level:2}},[_vm._v("\n      What's next?\n    ")]),_vm._v(" "),_c("section",[_c("div",{staticClass:"article-layout"},[_c("div",{staticClass:"article-layout__text"},[_c("Container",{attrs:{type:"content"}},[_c("Paragraph",[_vm._v("\n              Above you saw an example of basic Rails application used SQLite. In order to use Postgresql and Webpacker you need something more complicated than simple Dockerfile. You need docker-compose. There you will be able to separate application into a ruby service, and the client service.\n            ")]),_vm._v(" "),_c("Paragraph",[_vm._v("\n              Here is example of docker-compose.yml\n            ")]),_vm._v(" "),_c("CodeSinppet",[_c("CSDockerCompose")],1)],1)],1),_vm._v(" "),_c("div",{staticClass:"article-layout__quotes"},[_c("LinksList",{attrs:{links:[["Heavily inspired by Evil Martians article","https://evilmartians.com/chronicles/ruby-on-whales-docker-for-ruby-rails-development"]]}})],1)])])],1)],1)}),[],!1,null,null,null);const __vuedocgen_export_0=component.exports;__webpack_exports__.default=__vuedocgen_export_0;installComponents(component,{SocialHead:__webpack_require__(1068).default,HeroTitleSmall:__webpack_require__(1073).default,Title:__webpack_require__(1069).default,Paragraph:__webpack_require__(1071).default,Container:__webpack_require__(1067).default,Spacing:__webpack_require__(1072).default,CodeSinppet:__webpack_require__(1075).default,LinksList:__webpack_require__(1070).default}),__vuedocgen_export_0.__docgenInfo={exportName:"default",displayName:"rails-on-docker",description:"",tags:{}}}}]);